<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE help [
<!ENTITY lt "#38;#60;">
<!ENTITY gt "&#62;">
<!ENTITY amp "&#38;#38;">
<!ELEMENT help (name , synopsis , description* , arguments+ , outputs* , example* , bugs* , references* , reporting* , see-also*)*>
<!ELEMENT name (#PCDATA)>
<!ELEMENT synopsis (#PCDATA)>
<!ELEMENT description (#PCDATA)>
<!ELEMENT arguments (positional* , required-flagged* , optional-flagged*)*>
<!ELEMENT positional (intro* , argument* , explanation*)*>
<!ELEMENT required-flagged (intro* , argument* , explanation*)*>
<!ELEMENT optional-flagged (intro* , argument* , explanation*)*>
<!ELEMENT intro (#PCDATA)>
<!ELEMENT argument (#PCDATA)>
<!ELEMENT explanation (#PCDATA)>
<!ELEMENT outputs (output* , explanation*)>
<!ELEMENT output (#PCDATA)>
<!ELEMENT example (#PCDATA)>
<!ELEMENT bugs (#PCDATA)>
<!ELEMENT references (#PCDATA)>
<!ELEMENT reporting (#PCDATA)>
<!ELEMENT see-also (#PCDATA)>
]>

<help>
  <name>mri_concatenate_gcam -- concatenate transforms</name>
  <synopsis>mri_concatenate_gcam [options] input ... ouput</synopsis>
  <description>This program concatenates a combination of input LTAs (linear transform) and GCAMs (non-linear M3Z warps). The passed transforms are applied in the order specified on the command line, that is the first transform would be applied to an image first (but to coordinates last, as the transforms applied to coordinates are the inverse of those applied to images).</description>
  <arguments>
    <positional>
      <argument>input</argument>
      <explanation>combination of LTAs and M3Zs</explanation>
      <argument>output</argument>
      <explanation>concatenated output transform, saved as an LTA or M3Z depending on the input transforms</explanation>
    </positional>
    <required-flagged>
      <intro>None</intro>
    </required-flagged>
    <optional-flagged>
      <argument>-w, --ras</argument>
      <explanation>Create transform in RAS world space, default is voxel space of source image</explanation>
      <argument>-s, --source</argument>
      <explanation>Override source image geometry of output transform, useful e.g. for GCAM inversion if the path of the original source volume changed</explanation>
      <argument>-d, --dest</argument>
      <explanation>Override destination image geometry of output transform, the transform itself is not changed</explanation>
      <argument>-r, --reduce</argument>
      <explanation>Reduce to single LTA, ignored if output is M3Z</explanation>
      <argument>-i, --invert</argument>
      <explanation>Invert the output transformation</explanation>
    </optional-flagged>
  </arguments>
  <outputs>
    <output>output</output>
    <explanation>Composite LTA or M3Z transform, depending on input</explanation>
  </outputs>
  <example>Reduce and invert LTA:
    mri_concatenate_gcam -r -i in.lta out.lta</example>
  <example>Concatenate transforms:
    mri_concatenate_gcam in1.fslmat in2.m3z in3.m3z in4.lta out.m3z</example>
  <example>Change source image geometry:
    mri_concatenate_gcam --dest norm.nii in.m3z out.m3z</example>
  <bugs>None</bugs>
  <reporting>Report bugs to &lt;freesurfer@nmr.mgh.harvard.edu&gt;</reporting>
  <see-also>mri_concatenate_lta, mri_warp_convert</see-also>
</help>
