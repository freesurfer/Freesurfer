#!/bin/tcsh -f

umask 002

unsetenv FREESURFER_mrisComputeDefectMRILogUnlikelihood_ComputeVertexPseudoNormalCache_test
unsetenv FREESURFER_mrisComputeDefectMRILogUnlikelihood_test_avoidable_prediction

printenv | grep FREESURFER

# 1 2 4 8
foreach threads ( 1 2 4 8 )

  # 2 -1
  foreach niters ( -1 )
    if ($niters != -1) then
      set NITERS_OPTION = "-niters $niters"
      set NITERS_EXTENSION =
    else
      set NITERS_OPTION = 
      set NITERS_EXTENSION = _unlimited
    endif
  
    #  currently available:
    # 	.bf_wrongBufferSize .nf_faster_distance_map_update_6
    #
    # Don't forget to...
    #   cp mris_fix_topology{,.nf_faster_distance_map_update_5}
    #
    foreach branch ( .nf_faster_distance_map_update_8 )

      foreach feature ( 0 )
    
        # This is the supposedly worst state
	#
	
	# Enabling the new features one at a time
	#
        #if ($feature >= 1) then
        #endif
	
	set extension = -B${branch}-F${feature}-N${niters}-T${threads}

	# extract testing data
	rm -rf testdata
	gunzip -c testdata.tar.gz | tar xf -

	cd testdata
	cp subjects/bert/surf/lh.orig{.before,}

	setenv FREESURFER_HOME ../../distribution
	setenv SUBJECTS_DIR ./subjects
	setenv OMP_NUM_THREADS $threads
	echo "testing with $threads thread(s)"

	setenv FREESURFER_REPLACEMENT_FOR_CREATION_TIME_STRING "Sun Jan 11 11:11:11 ZONE 2011"

	# ---- TEST 1 ----

	# run mris_make_surfaces using typical input

        set cmd=(../mris_fix_topology${branch} \
                $NITERS_OPTION \
                -mgz \
                -sphere qsphere.nofix \
                -ga -seed 1234 bert lh)

        echo ""
        echo "$cmd >& ../mris_fix_topology${extension}.log"
        #rm -rf oprofile_data
        #operf -g -t \
              $cmd >& ../mris_fix_topology${extension}.log
        #opreport --callgraph > ../mris_fix_topology_oprofile_callgraph${extension}.txt

        grep -H RUNTIME ../mris_fix_topology${extension}.log
        
	# cleanup

	cd ..
	rm -rf testdata${extension}
	mv testdata{,${extension}}

      end
    end
  end
end
