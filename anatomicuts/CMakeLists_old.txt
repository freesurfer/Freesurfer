cmake_minimum_required(VERSION 2.6)

project(AnatomiCuts)

	if(WIN32)
set(${PROJECT_NAME}_ARCHIVE_OUTPUT_DIRECTORY lib)
set(${PROJECT_NAME}_RUNTIME_OUTPUT_DIRECTORY bin)
set(${PROJECT_NAME}_LIBRARY_OUTPUT_DIRECTORY bin)
	else(WIN32)
set(${PROJECT_NAME}_ARCHIVE_OUTPUT_DIRECTORY lib)
set(${PROJECT_NAME}_RUNTIME_OUTPUT_DIRECTORY bin)
set(${PROJECT_NAME}_LIBRARY_OUTPUT_DIRECTORY lib)
endif(WIN32)

set(CMAKE_DEBUG_POSTFIX "d")

set(LIBRARY_OUTPUT_PATH    ${CMAKE_BINARY_DIR}/${${PROJECT_NAME}_LIBRARY_OUTPUT_DIRECTORY})
set(ARCHIVE_OUTPUT_PATH    ${CMAKE_BINARY_DIR}/${${PROJECT_NAME}_ARCHIVE_OUTPUT_DIRECTORY})
set(RUNTIME_OUTPUT_PATH    ${CMAKE_BINARY_DIR}/${${PROJECT_NAME}_RUNTIME_OUTPUT_DIRECTORY})
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${${PROJECT_NAME}_RUNTIME_OUTPUT_DIRECTORY})
set(CXX_TEST_PATH          ${EXECUTABLE_OUTPUT_PATH})


#INCLUDE(${CMAKE_SOURCE_DIR}/IJMacros.txt)
#INCLUDE(${CMAKE_SOURCE_DIR}/SDCMakeMacros.cmake)


SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMake)
SET(Required_Packages
	ITK
	VTK
#	VXL
)

#FIND_PATH(VXL_DIR REQUIRED)
#set(VXL_LIBRARIES ${VXL_DIR}/core/vnl/algo/)
#INCLUDE(${VXL_DIR}/UseVXL.cmake)
#message("vxl libs")
#message("vxl libs" ${VXL_LIBRARIES})

#-----------------------------------------------------------------------------
#this foreach loads all of the packages that you specified as required.
#It shouldn't need to be modified.
#FOREACH(Package ${Required_Packages})
#LOAD_REQUIRED_PACKAGE(${Package})
#ENDFOREACH(Package)


enable_language(Fortran)
FIND_PACKAGE(LAPACK REQUIRED)
FIND_PATH(ALGLIB_DIR REQUIRED)
FIND_PATH(ITK_DIR REQUIRED)
FIND_PATH(VTK_DIR REQUIRED)
#FIND_PATH(FREESURFER_DIR REQUIRED)


set(ALGLIB_LIBRARIES 
	${ALGLIB_DIR}/cpp/src/ap.cpp  ${ALGLIB_DIR}/cpp/src/alglibinternal.cpp    ${ALGLIB_DIR}/cpp/src/alglibmisc.cpp   ${ALGLIB_DIR}/cpp/src/linalg.cpp    ${ALGLIB_DIR}/cpp/src/solvers.cpp   ${ALGLIB_DIR}/cpp/src/optimization.cpp   ${ALGLIB_DIR}/cpp/src/specialfunctions.cpp   ${ALGLIB_DIR}/cpp/src/integration.cpp   ${ALGLIB_DIR}/cpp/src/interpolation.cpp )


if(CMAKE_SYSTEM_NAME MATCHES Windows)
set(ENABLECUDA NO)
endif(CMAKE_SYSTEM_NAME MATCHES Windows)


include_directories(
${ALGLIB_DIR}/cpp/src
Code
)

add_executable(AnatomiCuts
	AnatomiCuts.cxx
)

target_link_libraries(AnatomiCuts
	vtkIO
	vtkFiltering
	vtkCommon
	${ITK_LIBRARIES}
)


