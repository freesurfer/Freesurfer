sudo: required

language: cpp

compiler: gcc

cache:
  - apt
  - ccache

matrix:
  include:
  # Compile only on osx and linux:
  - os: osx
    env: TESTS=""
  - os: linux
    env: TESTS=""
  # tests currently work only on linux due to neurodebian-travis.sh script below
  # Autorecon1:  
  - os: linux
    env: TESTS="mri_convert mri_add_xform_to_header talairach_avi talairach_afd mri_normalize mri_watershed"
  # Autorecon2 and 3:
  - os: linux
    env: TESTS="mri_cc mri_mask mri_segment mri_edit_wm_with_aseg mri_pretess mri_fill mri_tesellate mris_inflate mris_ca_label"
  # Misc
  - os: linux
    env: TESTS="utils"

addons:
  apt:
    packages:
     - build-essential
     - libtool
     - automake
     - gfortran
     - libglu1-mesa-dev
     - libfreetype6-dev
     - uuid-dev
     - libxmu-dev
     - libxmu-headers
     - libxi-dev
     - libx11-dev
     - libxt-dev
     - libxaw7-dev
     - liblapack-dev
     - tcsh
     - curl
     - git
     - libxml2-utils

before_install:
  # on osx use brew to install autotools and compiler
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install libtool ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install automake ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew postinstall automake ; fi
     # workaround to make install gcc work (first uninstall conflicting oclint)
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask uninstall oclint ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gcc49 ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew postinstall gcc49 ; fi
  # Needs recent git-annex to be able to get -J3 --metadata
  - if [[ "$TESTS" != "" ]]; then bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh) ; fi
  - if [[ "$TESTS" != "" ]]; then travis_retry sudo apt-get update -qq ; fi
  - if [[ "$TESTS" != "" ]]; then travis_retry sudo apt-get install git-annex-standalone ; fi
  - if [[ "$TESTS" != "" ]]; then git fetch origin git-annex ; fi
  - if [[ "$TESTS" != "" ]]; then git remote add datasrc http://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/repo/annex.git ; fi
  - if [[ "$TESTS" != "" ]]; then git fetch datasrc git-annex ; fi
  - if [[ "$TESTS" != "" ]]; then git annex get -J3 --metadata fstags=makecheck . ; fi

install:
  # Install library packages needed to compile FreeSurfer
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then curl -O ftp://surfer.nmr.mgh.harvard.edu/pub/dist/fs_supportlibs/prebuilt/centos6_x86_64/centos6-x86_64-packages.tar.gz ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar -xzf centos6-x86_64-packages.tar.gz  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then rm centos6-x86_64-packages.tar.gz  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cd centos6-x86_64-packages  ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./setup.sh ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cd .. ; fi
  # different package on osx
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then mkdir osx-lion-packages ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd osx-lion-packages ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then curl -O ftp://surfer.nmr.mgh.harvard.edu/pub/dist/fs_supportlibs/prebuilt/OSX/osx-lion-packages.tar.gz ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then tar -xzf osx-lion-packages.tar.gz ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then rm osx-lion-packages.tar.gz ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd .. ; fi
 
script:
  # configure and build freesurfer
  - ./setup_configure
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./configure --prefix=/usr/local/freesurfer/dev --with-pkgs-dir=${PWD}/centos6-x86_64-packages --disable-Werror --disable-GUI-build ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then ./configure --prefix=/usr/local/freesurfer/dev --with-pkgs-dir=${PWD}/osx-lion-packages       --disable-Werror --disable-GUI-build  F77=/usr/local/bin/gfortran-4.9 CC=/usr/local/bin/gcc-4.9 CXX=/usr/local/bin/g++-4.9 ; fi
  - travis_wait 40 ./travis_make.sh || travis_terminate 1
  # run tests
  - if [[ "$TESTS" != "" ]]; then travis_wait 60 ./run_selected_tests ; fi

after_failure:
  - tail -n 200 build.log
  
